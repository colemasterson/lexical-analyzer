Prog -> modulet idt; DeclarativePart StatementPart endt idt.

DeclarativePart -> ConstPart VarPart ProcPart

ConstPart -> constt ConstTail | 

ConstTail -> idt = Value ; ConstTail | 

VarPart -> vart VarTail | 

VarTail -> IdentifierList : TypeMark ; VarTail | 

IdentifierList -> idt | IdentifierList , idt

TypeMark -> integert | realt | chart

Value -> NumericalLiteral

ProcPart -> ProcedureDecl ProcPart | 

ProcedureDecl -> ProcHeading ; ProcBody idt ;

ProcHeading -> proct idt Args

ProcBody -> DeclarativePart StatementPart endt

Args -> ( ArgList ) | 

ArgList -> Mode IdentifierList : TypeMark MoreArgs

MoreArgs -> ; ArgList | 

Mode -> vart | 

StatmentPart -> begint SeqOfStatements | 

SeqOfStatements -> 

-- Assignment 6 Starts Here --

SeqOfStatments -> Statement ; StatTail | 

StatTail -> Statement ; StatTail | 

Statement -> AssignStat | IOStat

AssignStat -> idt := Expr

IOStat -> 

Expr -> Relation

Relation -> SimpleExpr

SimpleExpr -> Term MoreTerm

MoreTerm -> Addop Term MoreTerm | 

Term -> Factor MoreFactor

MoreFactor -> Mulop Factor MoreFactor| 

Factor -> idt | numt | ( Expr ) | ~ Factor| SignOp Factor

Addop -> + | - | OR

Mulop -> * | / |DIV|MOD| &

SignOp -> -

